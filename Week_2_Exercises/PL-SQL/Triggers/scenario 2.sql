CREATE TABLE Transactions (
    TRANSACTION_ID NUMBER PRIMARY KEY,
    ACCOUNT_ID NUMBER,
    AMOUNT NUMBER(15, 2),
    TRANSACTION_DATE DATE
);

CREATE TABLE AuditLog (
    AUDIT_ID NUMBER PRIMARY KEY,
    TRANSACTION_ID NUMBER,
    ACCOUNT_ID NUMBER,
    AMOUNT NUMBER(15, 2),
    TRANSACTION_DATE DATE,
    LOG_DATE DATE
);

CREATE SEQUENCE AuditLog_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER LogTransaction
AFTER INSERT ON Transactions
FOR EACH ROW
BEGIN
    INSERT INTO AuditLog (
        AUDIT_ID, TRANSACTION_ID, ACCOUNT_ID, AMOUNT, TRANSACTION_DATE, LOG_DATE
    ) VALUES (
        AuditLog_SEQ.NEXTVAL, :NEW.TRANSACTION_ID, :NEW.ACCOUNT_ID, :NEW.AMOUNT, :NEW.TRANSACTION_DATE, SYSDATE
    );
END;
/

SET SERVEROUTPUT ON;
BEGIN
    INSERT INTO Transactions (TRANSACTION_ID, ACCOUNT_ID, AMOUNT, TRANSACTION_DATE)
    VALUES (3, 1, 300, SYSDATE);

    FOR rec IN (SELECT * FROM AuditLog WHERE TRANSACTION_ID = 3) LOOP
        DBMS_OUTPUT.PUT_LINE('Audit ID: ' || rec.AUDIT_ID || ', Transaction ID: ' || rec.TRANSACTION_ID || ', Amount: ' || rec.AMOUNT);
    END LOOP;
END;
/
